openapi: 3.0.0
info:
  version: '1.0'
  title: 'stock_service'
  license:
    name: MIT
servers:
  - url: 'https://localhost/api/v1'
paths:
  /workers:
    post:
      summary: Add worker
      description: Creates a new worker.
      tags:
        - workers

      requestBody:
        description: A worker schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerPost'
            example:
              name: "Max"
              surname: "Mitsevich"
              birthdate: "2002-03-04"
              username: "maxermu"
              password: "123456"
      responses:
        '200':
          description: Worker was added.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

    put:
      summary: Update worker
      description: Updates worker.
      tags:
        - workers
      security:
          - TokenAuth: []

      requestBody:
        description: A worker schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerPost'
            example:
              name: "Max"
              surname: "Mitsevich"
              birthdate: "2002-03-04"
              username: "maxermu"
              password: "123456"
      responses:
        '200':
          description: Worker was updated.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

    get:
      summary: Get worker
      description: get worker.
      tags:
        - workers
      
      security:
          - TokenAuth: []
      
      responses:
        '200':
          description: access token.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

  '/workers/{worker_id}/privilege':
    put:
      summary: Update privilege
      description: Update privilege.
      tags:
        - workers

      security:
          - TokenAuth: []

      parameters:
        - name: worker_id
          in: path
          description: Detail's part number.
          required: true
          schema:
            type: integer
            example: 15

      requestBody:
        description: A worker schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Privilege'
            example:
              privilege_level: 3

      responses:
        '200':
          description: Updated.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

  /auth:
    get:
      summary: Auth data
      description: Auth data.
      tags:
        - auth
      
      security:
          - TokenAuth: []
      
      responses:
        '200':
          description: access token.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

  /auth/login:
    post:
      summary: Login
      description: Login.
      tags:
        - auth

      requestBody:
        description: A worker auth schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerAuth'
            example:
              username: "maxermu"
              password: "123456"
      responses:
        '200':
          description: access token.
        '503':
          description: Server Error


  /details:
    get:
      summary: 'Sample endpoint: Returns details for all time'
      operationId: listDetails
      tags:
        - details

      security:
          - TokenAuth: []

      responses:
        '200':
          description: 'Sample response: Details for all time or in stock'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
        '401':
          description: Unauthorized
        '503':
          description: Server Error

        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Add detail
      description: Creates a new detail.
      tags:
        - details

      security:
          - TokenAuth: []

      requestBody:
        description: A detail schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detail'
            example:
              part_number: b95c2b97-8b7c-4a50-9837-eea4e689a126
              name_rus: 'Рулевая рейка'
              name_eng: 'steering rack'
              producer_id: 1
      responses:
        '200':
          description: Detail was added.
        '401':
          description: Unauthorized
        '503':
          description: Server Error


  '/details/{part_number}':
    get:
      summary: Get detail by part_number
      description: Retrieves a detail's swaps.
      tags:
        - details

      security:
          - TokenAuth: []

      parameters:
        - name: part_number
          in: path
          description: Detail's part number.
          required: true
          schema:
            type: string
            example: b95c2b97-8b7c-4a50-9837-eea4e689a126
      responses:
        '200':
          description: Detail.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

    put:
      summary: update detail
      description: Retrieves a detail's swaps.
      tags:
        - details

      security:
          - TokenAuth: []

      parameters:
        - name: part_number
          in: path
          description: Detail's part number.
          required: true
          schema:
            type: string
            example: b95c2b97-8b7c-4a50-9837-eea4e689a126
        
      requestBody:
        description: A detail schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetailUpdate'
            example:
              name_rus: 'Рулевая рейка'
              name_eng: 'steering rack'
              producer_id: 1

      responses:
        '200':
          description: Detail's swaps.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

    delete:
      summary: Delete detail by part_number
      description: Retrieves a detail's swaps.
      tags:
        - details

      security:
          - TokenAuth: []

      parameters:
        - name: part_number
          in: path
          description: Detail's part number.
          required: true
          schema:
            type: string
            example: b95c2b97-8b7c-4a50-9837-eea4e689a126
      responses:
        '200':
          description: Detail.
        '401':
          description: Unauthorized
        '503':
          description: Server Error


  /producers:
    get:
      summary: 'Sample endpoint: Returns producers'
      operationId: listProducers
      tags:
        - producers

      security:
          - TokenAuth: []

      responses:
        '200':
          description: 'Sample response: All known producers'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
        '401':
          description: Unauthorized
        '503':
          description: Server Error

        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Add producer
      description: Creates a new producer.
      tags:
        - producers

      security:
          - TokenAuth: []

      requestBody:
        description: A producer schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProducerPost'
            example:
              name: 'Форд'
              country: 'USA'
      responses:
        '200':
          description: Detail was added.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

  '/details/{part_number}/swaps':
    get:
      summary: Get detail swaps
      description: Retrieves a detail's swaps.
      tags:
        - details

      security:
          - TokenAuth: []

      parameters:
        - name: part_number
          in: path
          description: The detail's part number.
          required: true
          schema:
            type: string
            example: "75fde07b-e86f-4535-bd03-fbfd03353a5e"
      responses:
        '200':
          description: Detail's swaps.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

    post:
      summary: Add detail's swaps
      description: Creates a new detail swaps.
      tags:
        - details

      security:
          - TokenAuth: []

      parameters:
        - name: part_number
          in: path
          description: The detail's part number.
          required: true
          schema:
            type: string
            example: "75fde07b-e86f-4535-bd03-fbfd03353a5e"
      requestBody:
        description: A product schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Swaps'
            example:
              swap_part_numbers: "a7a30935-a5c2-49ef-8700-84b39a0bbc3c"
      responses:
        '200':
          description: Detail's swaps.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

    delete:
      summary: Add detail's swaps
      description: Creates a new detail swaps.
      tags:
        - details

      security:
          - TokenAuth: []

      parameters:
        - name: part_number
          in: path
          description: The detail's part number.
          required: true
          schema:
            type: string
            example: "75fde07b-e86f-4535-bd03-fbfd03353a5e"
      requestBody:
        description: A product schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Swaps'
            example:
              swap_part_numbers: "a7a30935-a5c2-49ef-8700-84b39a0bbc3c"
      responses:
        '200':
          description: Detail's swaps.
        '401':
          description: Unauthorized
        '503':
          description: Server Error


  '/producers/{producer_id}':
    get:
      summary: Get producer by id
      description: Retrieves a detail's swaps.
      tags:
        - producers

      security:
          - TokenAuth: []

      parameters:
        - name: producer_id
          in: path
          description: Producer id.
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Detail's swaps.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

    delete:
      summary: delete producer by id
      description: Retrieves a detail's swaps.
      tags:
        - producers

      security:
          - TokenAuth: []

      parameters:
        - name: producer_id
          in: path
          description: Producer id.
          required: true
          schema:
            type: integer
            example: 1001
      responses:
        '200':
          description: Detail's swaps.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

    put:
      summary: update producer by id
      description: Retrieves a detail's swaps.
      tags:
        - producers

      security:
          - TokenAuth: []

      parameters:
        - name: producer_id
          in: path
          description: Producer id.
          required: true
          schema:
            type: integer
            example: 512
        
      requestBody:
        description: A producer schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProducerPost'
            example:
              name: 'Форд'
              country: 'USA'

      responses:
        '200':
          description: Detail's swaps.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

  /stock:
    post:
      summary: Add detail to stock
      description: Add detail to stock.
      tags:
        - stock

      security:
          - TokenAuth: []

      requestBody:
        description: A producer schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockPost'
            example:
              part_number: 'd1c1991a-89e2-4dd4-a132-cb58ebe7def0'
              quantity: 2
      responses:
        '200':
          description: Detail was added.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

    delete:
      summary: Remove detail from stock
      description: Remove detail from stock
      tags:
        - stock

      security:
          - TokenAuth: []

      requestBody:
        description: A stock request schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockPost'
            example:
              part_number: 'd1c1991a-89e2-4dd4-a132-cb58ebe7def0'
              quantity: 2
      responses:
        '200':
          description: Detail was removed.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

    get:
      summary: Get quantity by part_number
      description: stock inf.
      tags:
        - stock

      security:
          - TokenAuth: []

      parameters:
        - name: part_number
          in: query
          description: part number.
          required: false
          schema:
            type: string
            example: 'd1c1991a-89e2-4dd4-a132-cb58ebe7def0'
        - name: previous_details
          in: query
          description: previous_details.
          required: false
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: details.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

  /stock/logs:
    get:
      summary: Get stock logs
      description: Get stock logs.
      tags:
        - stock

      security:
          - TokenAuth: []

      requestBody:
        description: A stock logs schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockLog'
            example:
              time_start: '2022-03-04'
              time_end: '2022-12-31'
      responses:
        '200':
          description: Detail was added.
        '401':
          description: Unauthorized
        '503':
          description: Server Error

components:
  schemas:
    WorkerPost:
      type: object
      required:
        - name
        - surname
        - birthdate
        - username
        - password
      properties:
        name:
          type: string
        surname:
          type: string        
        birthdate:
          type: string
        username:
          type: string
        password:
          type: string

    WorkerAuth:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    Privilege:
      type: object
      required:
        - privilege_level
      properties:
        privilege_level:
          type: integer

    Detail:
      type: object
      required:
        - part_number
        - name_rus
        - name_eng
        - producer_id
      properties:
        part_number:
          type: string
        name_rus:
          type: string
        name_eng:
          type: string
        producer_id:
          type: integer

    DetailUpdate:
      type: object
      required:
        - name_rus
        - name_eng
        - producer_id
      properties:
        name_rus:
          type: string
        name_eng:
          type: string
        producer_id:
          type: integer

    ProducerPost:
      type: object
      required:
        - name
        - country
      properties:
        name:
          type: string
        country:
          type: string

    StockPost:
      type: object
      required:
        - part_number
        - quantity
      properties:
        part_number:
          type: string
        quantity:
          type: integer

    StockLog:
      type: object
      required:
        - time_start
        - time_end
      properties:
        time_start:
          type: string
        time_end:
          type: string

    Swaps:
      type: object
      required:
        - swap_part_numbers
      properties:
        swaps_part_numbers:
          type: string

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    TokenAuth:
      type: apiKey
      name: Autharization
      in: header

security:
  - BasicAuth: []
  - TokenAuth: []