openapi: 3.0.0
info:
  version: '1.0'
  title: 'db-course'
  license:
    name: MIT
servers:
  - url: 'localhost:8001'
paths:
  /user:
    get:
      summary: 'Sample endpoint: Returns details about a particular user'
      operationId: listUser
      tags:
        - user
      parameters:
        - name: id
          in: query
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'Sample response: Details about a user by ID'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /details:
    get:
      summary: 'Sample endpoint: Returns details for all time'
      operationId: listDetails
      tags:
        - details

      responses:
        '200':
          description: 'Sample response: Details for all time or in stock'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string

        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Add detail
      description: Creates a new detail.
      tags:
        - details

      requestBody:
        description: A detail schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Detail'
            example:
              part_number: b95c2b97-8b7c-4a50-9837-eea4e689a126
              name_rus: 'Рулевая рейка'
              name_eng: 'steering rack'
              producer_id: 1
      responses:
        '200':
          description: Detail was added.


  '/details/{part_number}':
    get:
      summary: Get detail by part_number
      description: Retrieves a detail's swaps.
      tags:
        - details
      parameters:
        - name: part_number
          in: path
          description: Detail's part number.
          required: true
          schema:
            type: string
            example: b95c2b97-8b7c-4a50-9837-eea4e689a126
      responses:
        '200':
          description: Detail.

    put:
      summary: update detail
      description: Retrieves a detail's swaps.
      tags:
        - details
      parameters:
        - name: part_number
          in: path
          description: Detail's part number.
          required: true
          schema:
            type: string
            example: b95c2b97-8b7c-4a50-9837-eea4e689a126
        
      requestBody:
        description: A detail schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetailUpdate'
            example:
              name_rus: 'Рулевая рейка'
              name_eng: 'steering rack'
              producer_id: 1

      responses:
        '200':
          description: Detail's swaps.

    delete:
      summary: Delete detail by part_number
      description: Retrieves a detail's swaps.
      tags:
        - details
      parameters:
        - name: part_number
          in: path
          description: Detail's part number.
          required: true
          schema:
            type: string
            example: b95c2b97-8b7c-4a50-9837-eea4e689a126
      responses:
        '200':
          description: Detail.



  /producers:
    get:
      summary: 'Sample endpoint: Returns producers'
      operationId: listProducers
      tags:
        - producers

      responses:
        '200':
          description: 'Sample response: All known producers'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string

        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Add producer
      description: Creates a new producer.
      tags:
        - producers

      requestBody:
        description: A producer schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProducerPost'
            example:
              name: 'Форд'
              country: 'USA'
      responses:
        '200':
          description: Detail was added.

  '/details/{part_number}/swaps':
    get:
      summary: Get detail swaps
      description: Retrieves a detail's swaps.
      tags:
        - details
      parameters:
        - name: part_number
          in: path
          description: The detail's part number.
          required: true
          schema:
            type: string
            example: "75fde07b-e86f-4535-bd03-fbfd03353a5e"
      responses:
        '200':
          description: Detail's swaps.

    post:
      summary: Add detail's swaps
      description: Creates a new detail swaps.
      tags:
        - details
      parameters:
        - name: part_number
          in: path
          description: The detail's part number.
          required: true
          schema:
            type: string
            example: "75fde07b-e86f-4535-bd03-fbfd03353a5e"
      requestBody:
        description: A product schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Swaps'
            example:
              swap_part_numbers: "a7a30935-a5c2-49ef-8700-84b39a0bbc3c"
      responses:
        '200':
          description: Detail's swaps.

    delete:
      summary: Add detail's swaps
      description: Creates a new detail swaps.
      tags:
        - details
      parameters:
        - name: part_number
          in: path
          description: The detail's part number.
          required: true
          schema:
            type: string
            example: "75fde07b-e86f-4535-bd03-fbfd03353a5e"
      requestBody:
        description: A product schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Swaps'
            example:
              swap_part_numbers: "a7a30935-a5c2-49ef-8700-84b39a0bbc3c"
      responses:
        '200':
          description: Detail's swaps.


  '/producers/{producer_id}':
    get:
      summary: Get producer by id
      description: Retrieves a detail's swaps.
      tags:
        - producers
      parameters:
        - name: producer_id
          in: path
          description: Producer id.
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Detail's swaps.

    delete:
      summary: delete producer by id
      description: Retrieves a detail's swaps.
      tags:
        - producers
      parameters:
        - name: producer_id
          in: path
          description: Producer id.
          required: true
          schema:
            type: integer
            example: 1001
      responses:
        '200':
          description: Detail's swaps.

    put:
      summary: update producer by id
      description: Retrieves a detail's swaps.
      tags:
        - producers
      parameters:
        - name: producer_id
          in: path
          description: Producer id.
          required: true
          schema:
            type: integer
            example: 512
        
      requestBody:
        description: A producer schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProducerPost'
            example:
              name: 'Форд'
              country: 'USA'

      responses:
        '200':
          description: Detail's swaps.

  /stock:
    post:
      summary: Add detail to stock
      description: Add detail to stock.
      tags:
        - stock

      requestBody:
        description: A producer schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockPost'
            example:
              part_number: 'd1c1991a-89e2-4dd4-a132-cb58ebe7def0'
              worker_id: 5
              quantity: 2
      responses:
        '200':
          description: Detail was added.

    delete:
      summary: Remove detail from stock
      description: Remove detail from stock
      tags:
        - stock

      requestBody:
        description: A stock request schema.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockPost'
            example:
              part_number: 'd1c1991a-89e2-4dd4-a132-cb58ebe7def0'
              worker_id: 5
              quantity: 2
      responses:
        '200':
          description: Detail was removed.

components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string

    Detail:
      type: object
      required:
        - part_number
        - name_rus
        - name_eng
        - producer_id
      properties:
        part_number:
          type: string
        name_rus:
          type: string
        name_eng:
          type: string
        producer_id:
          type: integer

    DetailUpdate:
      type: object
      required:
        - name_rus
        - name_eng
        - producer_id
      properties:
        name_rus:
          type: string
        name_eng:
          type: string
        producer_id:
          type: integer

    ProducerPost:
      type: object
      required:
        - name
        - country
      properties:
        name:
          type: string
        country:
          type: string

    StockPost:
      type: object
      required:
        - part_name
        - worker_id
        - quantity
      properties:
        part_name:
          type: string
        worker_id:
          type: integer
        quantity:
          type: integer


    Swaps:
      type: object
      required:
        - swap_part_numbers
      properties:
        swaps_part_numbers:
          type: string

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []